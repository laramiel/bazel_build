# Description:
#   Bazel BUILD file for libevent.
#
#   https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz
#
load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

package(default_visibility = ["//visibility:private"])

licenses(["notice"])  # BSD

exports_files(["LICENSE"])

LIBEVENT_HDR_PUBLIC = [
    "include/event2/buffer.h",
    "include/event2/buffer_compat.h",
    "include/event2/bufferevent.h",
    "include/event2/bufferevent_compat.h",
    # "include/event2/bufferevent_ssl.h",
    "include/event2/bufferevent_struct.h",
    "include/event2/dns.h",
    "include/event2/dns_compat.h",
    "include/event2/dns_struct.h",
    "include/event2/event.h",
    "include/event2/event_compat.h",
    "include/event2/event_struct.h",
    "include/event2/http.h",
    "include/event2/http_compat.h",
    "include/event2/http_struct.h",
    "include/event2/keyvalq_struct.h",
    "include/event2/listener.h",
    "include/event2/rpc.h",
    "include/event2/rpc_compat.h",
    "include/event2/rpc_struct.h",
    "include/event2/tag.h",
    "include/event2/tag_compat.h",
    "include/event2/thread.h",
    "include/event2/util.h",
    "include/event2/visibility.h",
]

cc_library(
    name = "event",
    hdrs = LIBEVENT_HDR_PUBLIC,
    visibility = ["//visibility:public"],
    deps = [":event_dev"],
)

LIBEVENT_HDR_PRIVATE = [
    "bufferevent-internal.h",
    "changelist-internal.h",
    "defer-internal.h",
    "epolltable-internal.h",
    "evbuffer-internal.h",
    "event-internal.h",
    "evmap-internal.h",
    "evrpc-internal.h",
    "evsignal-internal.h",
    "evthread-internal.h",
    "ht-internal.h",
    "http-internal.h",
    "iocp-internal.h",
    "ipv6-internal.h",
    "kqueue-internal.h",
    "log-internal.h",
    "minheap-internal.h",
    "mm-internal.h",
    "openssl-compat.h",
    "ratelim-internal.h",
    "strlcpy-internal.h",
    "time-internal.h",
    "util-internal.h",
    "compat/sys/queue.h",
]

LIBEVENT_HDR_COMPAT = [
    "include/evdns.h",
    "include/event.h",
    "include/evhttp.h",
    "include/evrpc.h",
    "include/evutil.h",
]

LIBEVENT_SRCS = [
    "buffer.c",
    "bufferevent.c",
    "bufferevent_filter.c",
    "bufferevent_pair.c",
    "bufferevent_ratelim.c",
    "bufferevent_sock.c",
    # "bufferevent_openssl.c", "
    # "bufferevent_ssl.c",
    # "bufferevent_mbedtls.c",
    "event.c",
    "evmap.c",
    "evthread.c",
    "evutil.c",
    "evutil_rand.c",
    "evutil_time.c",
    "listener.c",
    "log.c",
    "signal.c",
    "strlcpy.c",
    # SRC_EXTRA
    "event_tagging.c",
    "http.c",
    "evdns.c",
    "evrpc.c",
    "poll.c",  # HAVE_POLL
    "select.c",  # HAVE_SELECT
    # "evport.c" HAVE_EVENT_PORTS
]

LIBEVENT_WIN_SRCS = [
    "buffer_iocp.c",
    "bufferevent_async.c",
    "event_iocp.c",
    "win32select.c",
    "evthread_win32.c",
]

LIBEVENT_LINUX_SRCS = [
    "epoll.c",  # HAVE_EPOLL
    # "epoll_sub.c",
    "evthread_pthread.c",  # HAVE_PTHREAD
]

LIBEVENT_DARWIN_SRCS = [
    "evthread_pthread.c",  # HAVE_PTHREAD
    "kqueue.c",  # HAVE_KQUEUE
]

LIBEVENT_COPTS = select({
    "@platforms//os:windows": [
        "/W3",
        "/wd4996",
        "-D_CRT_SECURE_NO_WARNINGS",
        "-D_CRT_NONSTDC_NO_DEPRECATE",
    ],
    "//conditions:default": [
        "-Werror=implicit-function-declaration",
        "-Wno-array-parameter",
        "-pthread",
    ],
})

# NOTE: CMakeLists splits this into event_core and event_extra, ...
cc_library(
    name = "event_dev",
    srcs = LIBEVENT_HDR_PRIVATE + LIBEVENT_SRCS + select({
        "@platforms//os:windows": LIBEVENT_WIN_SRCS,
        "@platforms//os:macos": LIBEVENT_DARWIN_SRCS,
        "//conditions:default": LIBEVENT_LINUX_SRCS,
    }),
    hdrs = LIBEVENT_HDR_PUBLIC + LIBEVENT_HDR_COMPAT + [
        "include/event2/event-config.h",
    ],
    # strip_include_prefix = "include",
    copts = LIBEVENT_COPTS,
    # This disables some thread unsafe stuff that fails TSAN.
    defines = ["EVENT__DISABLE_DEBUG_MODE"],
    includes = [
        "compat",
        "include",
    ],
    linkopts = select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:ws2_32.lib",
            "-DEFAULTLIB:shell32.lib",
            "-DEFAULTLIB:advapi32.lib",
            "-DEFAULTLIB:bcrypt.lib",
        ],
        "//conditions:default": [],
    }),
    local_defines = ["HAVE_CONFIG_H"] + select({
        "@platforms//os:windows": ["WIN32_LEAN_AND_MEAN"],
        "//conditions:default": [],
    }),
    strip_include_prefix = "include",
    deps = [
        ":evconfig_private",
        ":arc4random_include",
    ] + select({
        "@platforms//os:windows": [":evconfig_win32_private"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "arc4random_include",
    hdrs = [
        "arc4random.c",
    ],
)

cc_library(
    name = "evconfig_private",
    hdrs = [
        "evconfig-private.h",
    ],
)

cc_library(
    name = "evconfig_win32_private",
    hdrs = [
        "WIN32-Code/getopt.h",
    ],
)

# Config section

#
# NOTE: This is incomplete, and should instead use a mechanism like
# https://github.com/RobotLocomotion/drake/blob/17423f8fb6f292b4af0b4cf3c6c0f157273af501/tools/workspace/cmake_configure_file.py

template_rule(
    name = "evconfig_private_tmpl",
    src = "evconfig-private.h.in",
    out = "evconfig-private.h",
    substitutions = {},
)

EVENT_CONFIG="""
#ifndef EVENT2_EVENT_CONFIG_H_INCLUDED_
#define EVENT2_EVENT_CONFIG_H_INCLUDED_

/* Numeric representation of the version */
#define EVENT__NUMERIC_VERSION 0x02010c00
#define EVENT__PACKAGE_VERSION "2.1.12"

#define EVENT__VERSION_MAJOR 2
#define EVENT__VERSION_MINOR 1
#define EVENT__VERSION_PATCH 12

/* Version number of package */
#define EVENT__VERSION "2.1.12-stable"
#define EVENT__PACKAGE "libevent"


#if defined(_MSC_VER)
// Windows definitions.
#define EVENT__HAVE_GETRANDOM 0
#define EVENT__HAVE_EVENTFD 0
#define EVENT__HAVE_KQUEUE 0
#define EVENT__HAVE_WORKING_KQUEUE 0
#define EVENT__HAVE_SPLICE 0
#define EVENT__HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN 1
#define EVENT__DNS_USE_FTIME_FOR_ID 1

#elif defined(__apple__)
// Apple definitions
#define EVENT__HAVE_GETRANDOM 0
#define EVENT__HAVE_EVENTFD 0
#define EVENT__HAVE_KQUEUE 1
#define EVENT__HAVE_WORKING_KQUEUE 1
#define EVENT__HAVE_SPLICE 1
#define EVENT__HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN 1
#define EVENT__HAVE_ARC4RANDOM 1
#define EVENT__HAVE_MACH_ABSOLUTE_TIME 1
#define EVENT__HAVE_MACH_MACH_TIME_H 1
#define EVENT__HAVE_MACH_MACH_H 1
#define EVENT__HAVE_SYSCTL 1

#else
// Linux, probably.
#define EVENT__HAVE_GETRANDOM 1
#define EVENT__HAVE_EVENTFD 1
#define EVENT__HAVE_KQUEUE 0
#define EVENT__HAVE_WORKING_KQUEUE 0
#define EVENT__HAVE_SPLICE 1
#endif


#define EVENT__PACKAGE_BUGREPORT ""
#define EVENT__PACKAGE_NAME ""
#define EVENT__PACKAGE_STRING ""
#define EVENT__PACKAGE_TARNAME ""
#define EVENT__DNS_USE_CPU_CLOCK_FOR_ID 1
#define EVENT__HAVE_ARPA_INET_H 1
#define EVENT__HAVE_CLOCK_GETTIME 1
#define EVENT__HAVE_DECL_CTL_KERN 0
#define EVENT__HAVE_DECL_KERN_ARND 0
#define EVENT__HAVE_NETDB_H 1
#define EVENT__HAVE_FD_MASK 1
#define EVENT__HAVE_TAILQFOREACH 1
#define EVENT__HAVE_DLFCN_H 1
#define EVENT__HAVE_FCNTL 1
#define EVENT__HAVE_FCNTL_H 1
#define EVENT__HAVE_GETADDRINFO 1
#define EVENT__HAVE_GETEGID 1
#define EVENT__HAVE_GETEUID 1
#define EVENT__HAVE_GETIFADDRS 1
#define EVENT__HAVE_GETNAMEINFO 1
#define EVENT__HAVE_GETPROTOBYNUMBER 1
#define EVENT__HAVE_GETSERVBYNAME 1
#define EVENT__HAVE_GETTIMEOFDAY 1
#define EVENT__HAVE_IFADDRS_H 1
#define EVENT__HAVE_INET_NTOP 1
#define EVENT__HAVE_INET_PTON 1
#define EVENT__HAVE_INTTYPES_H 1
#define EVENT__HAVE_LIBZ 1
#define EVENT__HAVE_MEMORY_H 1
#define EVENT__HAVE_MMAP 1
#define EVENT__HAVE_NANOSLEEP 1
#define EVENT__HAVE_USLEEP 1
#define EVENT__HAVE_NETINET_IN_H 1
#define EVENT__HAVE_NETINET_TCP_H 1
#define EVENT__HAVE_SYS_UN_H 1
#define EVENT__HAVE_PIPE 1
#define EVENT__HAVE_POLL 1
#define EVENT__HAVE_POLL_H 1
#define EVENT__HAVE_PTHREADS 1
#define EVENT__HAVE_PUTENV 1
#define EVENT__HAVE_SA_FAMILY_T 1
#define EVENT__HAVE_SELECT 1
#define EVENT__HAVE_SETENV 1
#define EVENT__HAVE_SETFD 1
#define EVENT__HAVE_SETRLIMIT 1
#define EVENT__HAVE_SENDFILE 1
#define EVENT__HAVE_SIGACTION 1
#define EVENT__HAVE_SIGNAL 1
#define EVENT__HAVE_STDARG_H 1
#define EVENT__HAVE_STDDEF_H 1
#define EVENT__HAVE_STDINT_H 1
#define EVENT__HAVE_STDLIB_H 1
#define EVENT__HAVE_STRING_H 1
#define EVENT__HAVE_STRSEP 1
#define EVENT__HAVE_STRTOK_R 1
#define EVENT__HAVE_STRTOLL 1
#define EVENT__HAVE_STRUCT_ADDRINFO 1
#define EVENT__HAVE_STRUCT_IN6_ADDR 1
#define EVENT__HAVE_STRUCT_SOCKADDR_IN6 1
#define EVENT__HAVE_STRUCT_SOCKADDR_UN 1
#define EVENT__HAVE_STRUCT_SOCKADDR_STORAGE 1
#define EVENT__HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY 1
#define EVENT__HAVE_STRUCT_LINGER 1

#if __has_include(<sys/epoll.h>)
#define EVENT__HAVE_EPOLL 1
#define EVENT__HAVE_EPOLL_CREATE1 1
#define EVENT__HAVE_EPOLL_CTL 1
#define EVENT__HAVE_SYS_EPOLL_H 1
#endif

#if __has_include(<sys/eventfd.h>)
#define EVENT__HAVE_SYS_EVENTFD_H 1
#endif

#if __has_include(<sys/event.h>)
#define EVENT__HAVE_SYS_EVENT_H 1
#endif

#if __has_include(<sys/ioctl.h>)
#define EVENT__HAVE_SYS_IOCTL_H 1
#endif

#if __has_include(<sys/mman.h>)
#define EVENT__HAVE_SYS_MMAN_H 1
#endif

#if __has_include(<sys/param.h>)
#define EVENT__HAVE_SYS_PARAM_H 1
#endif

#if __has_include(<sys/queue.h>)
#define EVENT__HAVE_SYS_QUEUE_H 1
#endif

#if __has_include(<sys/resource.h>)
#define EVENT__HAVE_SYS_RESOURCE_H 1
#endif

#if __has_include(<sys/select.h>)
#define EVENT__HAVE_SYS_SELECT_H 1
#endif

#if __has_include(<sys/sendfile.h>)
#define EVENT__HAVE_SYS_SENDFILE_H 1
#endif

#if __has_include(<sys/socket.h>)
#define EVENT__HAVE_SYS_SOCKET_H 1
#endif

#if __has_include(<sys/stat.h>)
#define EVENT__HAVE_SYS_STAT_H 1
#endif

#if __has_include(<sys/random.h>)
#define EVENT__HAVE_SYS_RANDOM_H 1
#endif

#if __has_include(<sys/sysctl.h>)
#define EVENT__HAVE_SYS_SYSCTL_H 1
#endif

#if __has_include(<sys/timerfd.h>)
#define EVENT__HAVE_SYS_TIMERFD_H 1
#define EVENT__HAVE_TIMERFD_CREATE 1
#endif

#if __has_include(<sys/time.h>)
#define EVENT__HAVE_SYS_TIME_H 1
#endif

#if __has_include(<sys/types.h>)
#define EVENT__HAVE_SYS_TYPES_H 1
#endif

#if __has_include(<sys/uio.h>)
#define EVENT__HAVE_SYS_UIO_H 1
#endif

#if __has_include(<sys/wait.h>)
#define EVENT__HAVE_SYS_WAIT_H 1
#endif

#if __has_include(<errno.h>)
#define EVENT__HAVE_ERRNO_H 1
#endif

#define EVENT__HAVE_TAILQFOREACH 1
#define EVENT__HAVE_TIMERADD 1
#define EVENT__HAVE_TIMERCLEAR 1
#define EVENT__HAVE_TIMERCMP 1
#define EVENT__HAVE_TIMERISSET 1
#define EVENT__HAVE_UINT8_T 1
#define EVENT__HAVE_UINT16_T 1
#define EVENT__HAVE_UINT32_T 1
#define EVENT__HAVE_UINT64_T 1
#define EVENT__HAVE_UINTPTR_T 1
#define EVENT__HAVE_UMASK 1
#define EVENT__HAVE_UNISTD_H 1
#define EVENT__HAVE_UNSETENV 1
#define EVENT__HAVE_VASPRINTF 1


#ifdef __USE_UNUSED_DEFINITIONS__
/* Define to necessary symbol if this constant uses a non-standard name on your system. */
/* XXX: Hello, this isn't even used, nor is it defined anywhere... - Ellzey */
#define EVENT__PTHREAD_CREATE_JOINABLE
#endif

#define EVENT__SIZEOF_PTHREAD_T 8
#define EVENT__SIZEOF_INT 4
#define EVENT__SIZEOF_LONG_LONG 8
#define EVENT__SIZEOF_OFF_T 8
#define EVENT__SIZEOF_SSIZE_T 8
#define EVENT__SIZEOF_SHORT 2
#define EVENT__SIZEOF_SIZE_T 8
#define EVENT__SIZEOF_SOCKLEN_T 4
#define EVENT__SIZEOF_VOID_P 8
#if defined(_MSC_VER)
#define EVENT__SIZEOF_LONG 4
#else
#define EVENT__SIZEOF_LONG 8
#endif

#ifndef __cplusplus
#define EVENT__inline inline
#endif

#define EVENT__HAVE___func__ 1
#define EVENT__HAVE___FUNCTION__ 1
#define EVENT__size_t size_t
#define EVENT__socklen_t socklen_t
#define EVENT__ssize_t ssize_t

#endif /* EVENT2_EVENT_CONFIG_H_INCLUDED_ */
"""

write_file(
    name = "event_config_tmpl",
    out = "include/event2/event-config.h",
    content = EVENT_CONFIG,
)

